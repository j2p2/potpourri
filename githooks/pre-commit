#!/bin/ruby

files = %x(git diff-index --cached HEAD).split(' ')
nofiles = files.size / 5
newfiles = []

nofiles.times { |x| newfiles.push files[((x+1)*6)-1] }

newfiles = newfiles.select { |x| x.end_with? '.rb' }

if newfiles.eql? []
  puts 'Nothing to test with rubocop, exiting pre-commit hook...'
  exit 0
end

puts "Testing files:\n#{newfiles.join("\n")}"

result = %x(rubocop -a #{newfiles.join(' ')})

firstpass = result.lines[1].gsub('.','').strip.eql? ''

if firstpass
  puts 'No errors found - continuing with commit!'
  exit 0
end

# Commented out so sanity of rubocop autocorrects can be tested before automatic re-commit....
#nextresult = %x(rubocop #{newfiles.join(' ')})

#resultlines = nextresult.lines.map{ |x| x.strip }

#if resultlines.index('Offenses:').nil?
#  puts 'Errors were found, but were auto-corrected - continuing with commit...'
#  exit 0
#end

puts result.slice(result.index('Offenses:'), result.size-3)

puts 'Rubocop errors found - please address and recommit!'
exit 1
